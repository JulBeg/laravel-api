x-php: &php
  build:
    context: .
    dockerfile: ./.docker/php/Dockerfile
    args:
      ENVIRONMENT: development
      USER_ID: ${UID:-1000}
      GROUP_ID: ${GID:-1000}
  image: laravel
  restart: unless-stopped
  env_file:
      - .env
  volumes:
    - ./src:/var/www/html
    - ~/.cache/composer:/home/www-data/.cache/composer

services:
  api:
    <<: *php
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "8000:8000"
    command: [ "php", "/var/www/html/artisan", "serve", "--host=0.0.0.0" ]
    healthcheck:
      test: curl --fail http://localhost:8000/up || exit 1
      interval: 10s
      retries: 5
      start_period: 20s
      timeout: 5s

  task:
    <<: *php
    volumes:
      - ./src:/srv
    command: ["php", "/var/www/html/artisan", "schedule:work"]
    depends_on:
      api:
        condition: service_healthy
    init: true # forwards SIGTERM to schedule:work
    healthcheck:
      test: ["CMD", "healthcheck-schedule"]
      start_period: 10s

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: 1
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysqldata:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "--silent" ]
      interval: 5s
      start_period: 30s
      retries: 3
      timeout: 5s

  phpmyadmin:
    image: phpmyadmin
    environment:
      PMA_HOST: ${DB_HOST}
      PMA_USER: ${DB_USERNAME}
      PMA_PASSWORD: ${DB_PASSWORD}
    ports:
      - "8080:80"
    depends_on:
      mysql:
        condition: service_healthy

  mailpit:
    image: 'axllent/mailpit:latest'
    ports:
      - '1025:1025'
      - '8025:8025'

volumes:
  mysqldata: